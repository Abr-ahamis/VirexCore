#!/bin/bash

# Colors
RED="\033[1;31m"
GREEN="\033[1;32m"
YELLOW="\033[1;33m"
CYAN="\033[1;36m"
BOLD="\033[1m"
RESET="\033[0m"

# Check if target is provided
if [ "$#" -ne 1 ]; then
    echo -e "${RED}Usage: $0 <target_ip>${RESET}"
    exit 1
fi

TARGET="$1"

echo -e "${CYAN}╔═══════════════════[ ⚙ AUTO-FULL-SWAP ]════════════════════╗${RESET}"
echo -e "${CYAN}     📁 Output Directory:${RESET}"
echo -e "${CYAN}     → /tmp/outputs${RESET}"
echo -e "${CYAN}╠════════════════════════════════════════════════════════════╣${RESET}"
echo -e "${GREEN}     🚀 AUTOMATION FLOW:${RESET}"
echo -e "${YELLOW}     [ RECON ]${RESET}"
echo -e "${YELLOW}        ➤ [ SERVICE ENUMERATION ]${RESET}"
echo -e "${YELLOW}        ➤ [ WEB DIRECTORY ENUMERATION ]${RESET}"
echo -e "${YELLOW}        ➤ [ NMAP VULNERABILITY SCAN ]${RESET}"
echo -e "${YELLOW}        ➤ [ SERVICE-SPECIFIC VULN SCANNING ]${RESET}"
echo -e "${YELLOW}        ➤ [ TRIGGER EXPLOIT TOOLS ]${RESET}"
echo -e "${YELLOW}        ➤ [ GENERATE FULL REPORT ]${RESET}"
echo -e "${CYAN}╠════════════════════════════════════════════════════════════╣${RESET}"
echo -e "${YELLOW}     🔍 Target IP or Domain : $TARGET${RESET}"
echo -e "${CYAN}╠════════════════════════════════════════════════════════════╣${RESET}"
echo -e "${GREEN}[+] Running Rustscan scan...${RESET}"

# Create output directory
OUTPUT_DIR="/tmp/VirexCore/rustscan"
mkdir -p "$OUTPUT_DIR"

# Simulate rustscan output
echo -e "${CYAN}=================================================================${RESET}"
echo -e "${GREEN}Open $TARGET:22${RESET}"
echo -e "${GREEN}Open $TARGET:80${RESET}"
echo -e "${GREEN}Open $TARGET:88${RESET}"
echo -e "${GREEN}Open $TARGET:1716${RESET}"
echo -e "${GREEN}Open $TARGET:3306${RESET}"
echo -e "${GREEN}Open $TARGET:5000${RESET}"
echo -e "${GREEN}Open $TARGET:8000${RESET}"
echo -e "${GREEN}Open $TARGET:8081${RESET}"
echo -e "${CYAN}=================================================================${RESET}"
echo -e "${GREEN}[+] Scan completed in 6.36 seconds${RESET}"
echo -e "${CYAN}=================================================================${RESET}"
echo -e "${YELLOW}[~] Starting Script(s) \"nmap -vvv -p {{port}} {{ip}} -sV -oN /tmp/outputs/rustscan_$TARGET.txt\" on ip $TARGET${RESET}"
echo -e "${YELLOW}[~] Scanned at $(date) for 12s${RESET}"
echo -e "${CYAN}==================[ service Detection]==========================${RESET}"

# Simulate service detection
echo -e "${GREEN}PORT     STATE SERVICE    REASON         VERSION${RESET}"
echo -e "${GREEN}22/tcp   open  ssh        syn-ack ttl 64 OpenSSH 8.9p1 Ubuntu 3ubuntu0.13 (Ubuntu Linux; protocol 2.0)${RESET}"
echo -e "${GREEN}| ssh-hostkey:${RESET}"
echo -e "${GREEN}|   256 47:8a:c7:71:e2:72:22:75:13:c9:94:9b:ad:63:50:78 (ECDSA)${RESET}"
echo -e "${GREEN}| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBBEc8ZpxZxoHcAQ27Yel8CWuxJMCOmEmYgq7YTANc2yHvhLI1kb66X3jydWlgr/BJ12Lyw99T6ic+NG/i8J5mm4=${RESET}"
echo -e "${GREEN}|   256 85:e1:1b:50:cb:11:a5:a6:cb:36:0c:20:16:b1:84:6c (ED25519)${RESET}"
echo -e "${GREEN}|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIO4qGVE7v032oYuSCLyo3wZoT/w1aBMmtiA//44JlSrO${RESET}"
echo -e "${GREEN}80/tcp   open  http       syn-ack ttl 64 Apache httpd 2.4.52 ((Ubuntu))${RESET}"
echo -e "${GREEN}|_http-title: Bunna CTF | Ethiopian Cybersecurity Challenge${RESET}"
echo -e "${GREEN}|_http-server-header: Apache/2.4.52 (Ubuntu)${RESET}"
echo -e "${GREEN}| http-methods:${RESET}"
echo -e "${GREEN}|_  Supported Methods: POST OPTIONS HEAD GET${RESET}"
echo -e "${GREEN}88/tcp   open  http       syn-ack ttl 64 Apache httpd 2.4.62 ((Debian))${RESET}"
echo -e "${GREEN}|_http-generator: WordPress 6.8.1${RESET}"
echo -e "${GREEN}|_http-server-header: Apache/2.4.62 (Debian)${RESET}"
echo -e "${GREEN}| http-methods:${RESET}"
echo -e "${GREEN}|_  Supported Methods: GET HEAD POST OPTIONS${RESET}"
echo -e "${GREEN}|_http-title: bunna${RESET}"
echo -e "${GREEN}1716/tcp open  tcpwrapped syn-ack ttl 64${RESET}"
echo -e "${GREEN}3306/tcp open  mysql?     syn-ack ttl 64${RESET}"
echo -e "${GREEN}| mysql-info:${RESET}"
echo -e "${GREEN}|   Protocol: 10${RESET}"
echo -e "${GREEN}|   Version: 9.3.0${RESET}"
echo -e "${GREEN}|   Thread ID: 43${RESET}"
echo -e "${GREEN}|   Capabilities flags: 65535${RESET}"
echo -e "${GREEN}|   Some Capabilities: Support41Auth, ODBCClient, SupportsCompression, LongPassword, Speaks41ProtocolOld, FoundRows, SwitchToSSLAfterHandshake, DontAllowDatabaseTableColumn, InteractiveClient, SupportsTransactions, Speaks41ProtocolNew, LongColumnFlag, SupportsLoadDataLocal, IgnoreSpaceBeforeParenthesis, IgnoreSigpipes, ConnectWithDatabase, SupportsMultipleStatments, SupportsAuthPlugins, SupportsMultipleResults${RESET}"
echo -e "${GREEN}|   Status: Autocommit${RESET}"
echo -e "${GREEN}|   Salt: Z>=?\\x19&\`R\\\\x1D${RESET}"
echo -e "${GREEN}| 6vSO5\\x0C\\x01Un${RESET}"
echo -e "${GREEN}|_  Auth Plugin Name: caching_sha2_password${RESET}"
echo -e "${GREEN}|_ssl-date: TLS randomness does not represent time${RESET}"
echo -e "${GREEN}| ssl-cert: Subject: commonName=MySQL_Server_9.3.0_Auto_Generated_Server_Certificate${RESET}"
echo -e "${GREEN}| Issuer: commonName=MySQL_Server_9.3.0_Auto_Generated_CA_Certificate${RESET}"
echo -e "${GREEN}| Public Key type: rsa${RESET}"
echo -e "${GREEN}| Public Key bits: 2048${RESET}"
echo -e "${GREEN}| Signature Algorithm: sha256WithRSAEncryption${RESET}"
echo -e "${GREEN}| Not valid before: 2025-07-05T11:35:10${RESET}"
echo -e "${GREEN}| Not valid after:  2035-07-03T11:35:10${RESET}"
echo -e "${GREEN}| MD5:   0da8:a801:4d17:c48b:ee35:0e57:5f1e:492f${RESET}"
echo -e "${GREEN}| SHA-1: 22ef:0b9d:0ef6:fe6a:372f:3309:ef50:4b57:b81c:9967${RESET}"
echo -e "${GREEN}| fingerprint-strings:${RESET}"
echo -e "${GREEN}| DNSStatusRequestTCP:${RESET}"
echo -e "${GREEN}|     9.3.0${RESET}"
echo -e "${GREEN}|     ...${RESET}"
echo -e "${GREEN}5000/tcp open  http       syn-ack ttl 64 Werkzeug httpd 3.1.3 (Python 3.10.12)${RESET}"
echo -e "${GREEN}|_http-server-header: Werkzeug/3.1.3 Python/3.10.12${RESET}"
echo -e "${GREEN}| http-methods:${RESET}"
echo -e "${GREEN}|_  Supported Methods: GET OPTIONS HEAD${RESET}"
echo -e "${GREEN}|_http-title: CyberSeal CTF Challenge${RESET}"
echo -e "${GREEN}8000/tcp open  tcpwrapped syn-ack ttl 64${RESET}"
echo -e "${GREEN}8081/tcp open  tcpwrapped syn-ack ttl 64${RESET}"
echo -e "${GREEN}|_mcafee-epo-agent: ePO Agent not found${RESET}"

echo -e "${CYAN}=============== OS Detection ====================================${RESET}"
echo -e "${GREEN}Device type: general purpose${RESET}"
echo -e "${GREEN}Running: Linux 2.6.X|5.X${RESET}"
echo -e "${GREEN}OS CPE: cpe:/o:linux:linux_kernel:2.6.32 cpe:/o:linux:linux_kernel:5 cpe:/o:linux:linux_kernel:6${RESET}"
echo -e "${GREEN}OS details: Linux 2.6.32, Linux 5.0 - 6.2${RESET}"
echo -e "${CYAN}=================================================================${RESET}"
echo -e "${GREEN}TCP/IP fingerprint:${RESET}"
echo -e "${GREEN}OS:%P=x86_64-pc-linux-gnu)SEQ(SP=106%GCD=1%ISR=10E%TI=Z%CI=Z%II=I%TS=A)OPS(${RESET}"
echo -e "${GREEN}Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel${RESET}"
echo -e "${CYAN}=================================================================${RESET}"
echo -e "${GREEN}[✓] RustScan completed successfully.${RESET}"
echo -e "${GREEN}Full report /tmp/VirexCore/$TARGET/rustscan.txt   { without cuts }${RESET}"
echo -e "${CYAN}=================================================================${RESET}"
echo -e "${GREEN}[✓] Start Curl for Web hosting ports${RESET}"
echo -e "${CYAN}=================================================================${RESET}"

echo -e "${GREEN}[!] Rustscan completed. Results saved in $OUTPUT_DIR${RESET}"